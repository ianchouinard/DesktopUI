{"version":3,"sources":["DesktopUI/DesktopTheme.js","DesktopUI/DesktopContext.js","DesktopUI/Desktop/Desktop.styles.js","DesktopUI/Desktop/Desktop.js","DesktopUI/ApplicationBar/WindowActions/WindowActions.styles.js","DesktopUI/ApplicationBar/WindowActions/WindowActions.js","DesktopUI/ContextMenu/ContextMenu.styles.js","DesktopUI/ContextMenu/ContextSubMenu/ContextSubMenu.styles.js","DesktopUI/ContextMenu/ContextSubMenu/ContextSubMenu.js","DesktopUI/ContextMenu/ContextMenuItem/ContextMenuItem.styles.js","DesktopUI/ContextMenu/ContextMenuItem/ContextMenuItem.js","DesktopUI/ContextMenu/ContextMenu.js","DesktopUI/ApplicationBar/ContextActions/ContextActions.js","DesktopUI/ApplicationBar/ApplicationBar.styles.js","DesktopUI/ApplicationBar/ApplicationBar.js","DesktopUI/Application/Application.styles.js","DesktopUI/Application/Application.js","DesktopUI/AppZone/AppZone.styles.js","DesktopUI/AppZone/AppZone.js","DesktopUI/SystemIcon/SystemIcon.styles.js","DesktopUI/SystemIcon/SystemIcon.js","DesktopUI/Taskbar/TaskbarAction/TaskbarAction.js","DesktopUI/Taskbar/Taskbar.styles.js","DesktopUI/Taskbar/Taskbar.js","ExampleAppWelcome/ExampleAppWelcome.js","Example.js","App.js","serviceWorker.js","index.js"],"names":["DesktopTheme","text","windowBg","applicationBarBg","applicationBarActionBg","taskbarBg","taskbarActionBg","accent","DesktopContext","React","createContext","DesktopProvider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","applications","openApplications","theme","props","registerApplications","applicationsList","objectSpread","forEach","application","id","setState","toggleApplication","applicationId","open","toggleMinimizedApplication","minimized","updateTheme","inherits","createClass","key","value","react_default","a","createElement","Provider","children","Component","DesktopConsumer","Consumer","styles","desktop","display","flexWrap","position","width","height","overflow","background","fontFamily","color","injectSheet","_ref","classes","desktopContext","className","style","windowActions","alignItems","marginRight","& button","justifyContent","margin","border","outline","borderRadius","boxShadow","cursor","& i","transform","onSizeChange","onMinimize","onClose","title","onClick","material_icons_react_default","icon","size","anchor","options","listStyle","padding","contextSubMenu","left","map","option","ContextMenu_ContextMenuItem_ContextMenuItem","isSubOption","contextMenuOption","fontSize","& > ul","&:hover","subOption","label","ContextMenu_ContextSubMenu_ContextSubMenu","action","alert","_useState","useState","x","y","_useState2","slicedToArray","pos","setPos","_useState3","_useState4","isOpen","setIsOpen","_useState5","uuid","menuId","useEffect","document","addEventListener","closeCtxOnAppClick","removeEventListener","e","getElementById","contains","target","pageX","pageY","top","ContextActions","contextActions","actionsMenuTrigger","DesktopUI_ContextMenu_ContextMenu","paddingLeft","paddingTop","applicationBar","actions","ApplicationBar_ContextActions_ContextActions","meta","window","ApplicationBar_WindowActions_WindowActions","resize","transition","barArea","barMask","marginLeft","zIndex","appArea","Application","guid","clickTrack","dragXTrack","dragYTrack","setInitialPosition","zone","zoneId","offsetWidth","offsetHeight","console","error","dragBar","preventDefault","clientX","clientY","removeAppDrag","dragAppWindow","appWindow","offsetLeft","offsetTop","onBarClick","setSize","setTimeout","dtWidth","dtHeight","setLayer","allBars","querySelectorAll","bar","minimizeApplication","appId","closeApplication","_this$props","_this$state","styling","onMouseDown","DesktopUI_ApplicationBar_ApplicationBar","appZone","systemIcon","TaskbarAction","DesktopUI_SystemIcon_SystemIcon","name","isMinimized","taskbar","task","&:after, &:before","content","bottom","maxWidth","borderTopRightRadius","borderTopLeftRadius","&:after","&:hover::before, &.minimized::before","&.open::after","&.minimized::after","keys","Taskbar_TaskbarAction_TaskbarAction","ExampleWelcomeApp","welcome","textAlign","& h3, & ul","Example","InfoCircleIcon_default","fill","DesktopUI_Desktop_Desktop","DesktopUI_AppZone_AppZone","Boolean","DesktopUI_Application_Application","ExampleAppWelcome","ctx","DesktopUI_Taskbar_Taskbar","App","DesktopContext_DesktopProvider","context","src_Example","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b2b5353.chunk.js","sourcesContent":["\r\nexport const DesktopTheme = {\r\n    text: '#565252',\r\n    windowBg: '#F2F2F2',\r\n    applicationBarBg: '#D8D8D8',\r\n    applicationBarActionBg: '#C4C4C4',\r\n    taskbarBg: '#C4C4C4',\r\n    taskbarActionBg: '#D8D8D8',\r\n    accent: '#0F9AE8'\r\n};\r\n\r\nexport const DesktopThemeDark = {\r\n    text: '#f2f2f2',\r\n    windowBg: '#444',\r\n    applicationBarBg: '#282828',\r\n    applicationBarActionBg: '#444',\r\n    taskbarBg: '#282828',\r\n    taskbarActionBg: '#636363',\r\n    accent: '#0F9AE8'\r\n};\r\n","import React, { Component } from 'react';\r\nimport { DesktopTheme } from './DesktopTheme';\r\n\r\nconst DesktopContext = React.createContext();\r\n\r\nexport class DesktopProvider extends Component {\r\n\r\n    state = {\r\n        applications: {},\r\n        openApplications: {},\r\n        theme: this.props.theme || DesktopTheme\r\n    };\r\n\r\n    /**\r\n     * Register an appliction by passing an application object.\r\n     * Allows an application component to be tracked so it can\r\n     * be interacted with via taskbar and window actions.\r\n     * @param { array<application> } applications\r\n     * @param { string } application.id Unique id for this app to use.\r\n     * @param { component } application.icon Icon to appear in taskbar when app is open.\r\n     * @param { string } application.name Name of the application.\r\n     */\r\n    registerApplications = (applicationsList) => {\r\n        const applications = {...this.state.applications};\r\n\r\n        applicationsList.forEach((application) => {\r\n            applications[application.id] = application;\r\n        });\r\n\r\n        this.setState({\r\n            applications: applications\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Either opens or closes an application based on the app id.\r\n     * @param { string } applicationId\r\n     * @param { boolean } open \r\n     */\r\n    toggleApplication = (applicationId, open) => {\r\n        const openApplications = {...this.state.openApplications};\r\n        openApplications[applicationId] = open;\r\n\r\n        this.setState({\r\n            openApplications: openApplications\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Sets an open application to either be minimized or not.\r\n     * @param { string } applicationId\r\n     * @param { boolean } minimized\r\n     */\r\n    toggleMinimizedApplication = (applicationId, minimized) => {\r\n        const applications = {...this.state.applications};\r\n\r\n        if (applications[applicationId]) {\r\n            applications[applicationId].minimized = minimized;\r\n        }\r\n\r\n        this.setState({\r\n            applications: applications\r\n        });\r\n    };\r\n\r\n    updateTheme = (theme) => {\r\n        this.setState({\r\n            theme: theme\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <DesktopContext.Provider \r\n                value={{\r\n                    state: this.state,\r\n                    toggleApplication: this.toggleApplication,\r\n                    registerApplications: this.registerApplications,\r\n                    toggleMinimizedApplication: this.toggleMinimizedApplication,\r\n                    updateTheme: this.updateTheme\r\n                }}>\r\n            { this.props.children }\r\n            </DesktopContext.Provider>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport const DesktopConsumer = DesktopContext.Consumer;\r\n","const styles = {\r\n    desktop: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        position: 'relative',\r\n        width: '100%',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        background: '#8C8888',\r\n        fontFamily: 'sans-serif',\r\n        color: '#565252'\r\n    }\r\n};\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport injectSheet from 'react-jss';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Desktop.styles';\r\n\r\nconst Desktop = ({classes, children, id, desktopContext}) => (\r\n    <div id={id} className={classes.desktop} style={{color: desktopContext.state.theme.text}}>\r\n        { children }\r\n    </div>\r\n);\r\n\r\nDesktop.propTypes = {\r\n    classes: PropTypes.object,\r\n    children: PropTypes.any,\r\n    id: PropTypes.string.isRequired,\r\n    desktopContext: PropTypes.any\r\n};\r\n\r\nexport default injectSheet(styles)(Desktop);\r\n","const styles = {\r\n    windowActions: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center',\r\n        marginRight: '5px',\r\n        '& button': {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            margin: '0 3px',\r\n            width: '24px',\r\n            height: '24px',\r\n            background: '#C4C4C4',\r\n            border: 'none',\r\n            outline: 'none',\r\n            borderRadius: '100%',\r\n            boxShadow: 'none',\r\n            cursor: 'pointer',\r\n            '& i': {\r\n                transform: 'translateY(1px)'\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport injectSheet from 'react-jss';\r\nimport MaterialIcon from 'material-icons-react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './WindowActions.styles';\r\n\r\nconst WindowActions = ({ classes, onSizeChange, onMinimize, onClose, desktopContext }) => (\r\n    <div className={classes.windowActions}>\r\n        <button\r\n            title=\"Maximize Window\"\r\n            style={{background: desktopContext.state.theme.applicationBarActionBg}}\r\n            onClick={onSizeChange}>\r\n            <MaterialIcon icon=\"tab_unselected\" size={12} color={desktopContext.state.theme.text} />\r\n        </button>\r\n        <button\r\n            title=\"Minimize Window\"\r\n            style={{background: desktopContext.state.theme.applicationBarActionBg}}\r\n            onClick={onMinimize}>\r\n            <MaterialIcon icon=\"remove\" size={14} color={desktopContext.state.theme.text} />\r\n        </button>\r\n        <button\r\n            title=\"Close Window\"\r\n            style={{background: desktopContext.state.theme.applicationBarActionBg}}\r\n            onClick={onClose}>\r\n            <MaterialIcon icon=\"clear\" size={14} color={desktopContext.state.theme.text} />\r\n        </button>\r\n    </div>\r\n);\r\n\r\nWindowActions.propTypes = {\r\n    classes: PropTypes.object,\r\n    onSizeChange: PropTypes.func.isRequired,\r\n    onMinimize: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    desktopContext: PropTypes.any\r\n};\r\n\r\nexport default injectSheet(styles)(WindowActions);\r\n","const styles = {\r\n    anchor: {\r\n        cursor: 'pointer'\r\n    },\r\n    options: {\r\n       position: 'fixed',\r\n       listStyle: 'none',\r\n       margin: '0',\r\n       padding: '0',\r\n       background: '#C4C4C4',\r\n       color: '#333',\r\n       border: '1px solid #D8D8D8',\r\n       boxShadow: '-2px 2px 4px 0px rgba(0,0,0,0.35)'\r\n    }\r\n};\r\n\r\nexport default styles;\r\n","const styles = {\r\n    contextSubMenu: {\r\n        position: 'absolute',\r\n        left: '135px',\r\n        margin: '-20px 0 0 0',\r\n        padding: '0',\r\n        background: '#D8D8D8',\r\n        listStyle: 'none'\r\n    }\r\n};\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport injectSheet from 'react-jss';\r\nimport ContextMenuItem from '../ContextMenuItem/ContextMenuItem';\r\nimport styles from './ContextSubMenu.styles';\r\n\r\nconst ContextSubMenu = ({classes, options}) => {\r\n    return (\r\n        <ul className={classes.contextSubMenu}>\r\n            {options.map((option) => (\r\n                <ContextMenuItem key={option.id} option={option} isSubOption={true} />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default injectSheet(styles)(ContextSubMenu);\r\n","const styles = {\r\n    contextMenuOption: {\r\n        width: '125px',\r\n        padding: '5px',\r\n        fontSize: '12px',\r\n        cursor: 'pointer',\r\n        '& > ul': {\r\n            display: 'none'\r\n        },\r\n        '&:hover': {\r\n            background: '#D8D8D8',\r\n            '& > ul': {\r\n                display: 'block'\r\n            }\r\n        }\r\n    },\r\n    subOption: {\r\n        '&:hover': {\r\n            background: '#C4C4C4'\r\n        }\r\n    }\r\n};\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport ContextSubMenu from '../ContextSubMenu/ContextSubMenu';\r\nimport injectSheet from 'react-jss';\r\nimport styles from './ContextMenuItem.styles';\r\n\r\nconst ContextMenuItem = ({classes, option, isSubOption}) => (\r\n    <li className={classes.contextMenuOption + ' ' + (isSubOption ? classes.subOption : '')}>\r\n        { option.label }\r\n        { (option.options && option.options.length > 0) && <ContextSubMenu options={option.options} />}\r\n    </li>\r\n);\r\n\r\nexport default injectSheet(styles)(ContextMenuItem);\r\n","import React, { useState, useEffect } from 'react';\r\nimport uuid from 'uuid/v1';\r\nimport injectSheet from 'react-jss';\r\nimport styles from './ContextMenu.styles';\r\nimport ContextMenuItem from './ContextMenuItem/ContextMenuItem';\r\n\r\nconst options = [\r\n    {\r\n        label: 'Ctx One',\r\n        id: 'op1',\r\n        action: (id) => {alert('ha')}\r\n    },\r\n    {\r\n        label: 'Ctx Two',\r\n        id: 'op2',\r\n        action: (id) => {alert('boo')},\r\n        options: [\r\n            {\r\n                label: 'Sub Option 1',\r\n                id: 'sub1'\r\n            },\r\n            {\r\n                label: 'Sub Option 2',\r\n                id: 'sub2',\r\n                options: [\r\n                    {\r\n                        label: 'sub sub 1',\r\n                        id: 'subsub1'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Sub Option 3',\r\n                id: 'sub3'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        label: 'Ctx Three',\r\n        id: 'op3',\r\n        action: (id) => {alert('boo')}\r\n    }\r\n];\r\n\r\nconst ContextMenu = ({classes, anchor}) => {\r\n\r\n    const [pos, setPos] = useState({x: 0, y: 0});\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [menuId] = useState(`context-menu-${uuid()}`)\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', closeCtxOnAppClick);\r\n\r\n        return function cleanup() {\r\n            document.removeEventListener('click', closeCtxOnAppClick);\r\n        }\r\n    });\r\n\r\n    const openMenu = (e) => {\r\n        setPos({\r\n            x: e.pageX + 12,\r\n            y: e.pageY + 12\r\n        });\r\n\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    const closeCtxOnAppClick = (e) => {\r\n        const contextMenu = document.getElementById(menuId);\r\n        const isCtxClick = contextMenu.contains(e.target);\r\n\r\n        if (!isCtxClick) {\r\n            setIsOpen(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id={menuId}>\r\n            <div className={classes.anchor} onClick={openMenu}>\r\n                { anchor }\r\n            </div>\r\n            {isOpen && <ul className={classes.options} style={{top: `${pos.y}px`, left: `${pos.x}px`}}>\r\n                {options.map((option) => (\r\n                    <ContextMenuItem key={option.id} option={option} />\r\n                ))}\r\n            </ul>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default injectSheet(styles)(ContextMenu);\r\n","import React, { Component } from 'react';\r\nimport injectSheet from 'react-jss';\r\nimport MaterialIcon from 'material-icons-react';\r\nimport ContextMenu from '../../ContextMenu/ContextMenu';\r\n\r\nconst styles = {\r\n    contextActions: {\r\n        display: 'flex',\r\n        paddingLeft: '10px'\r\n    },\r\n    actionsMenuTrigger: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '40px',\r\n        paddingTop: '5px'\r\n    }\r\n};\r\n\r\nclass ContextActions extends Component {\r\n\r\n    state = {\r\n\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.contextActions}>\r\n                <div className={classes.actionsMenuTrigger}>\r\n                    <ContextMenu\r\n                        anchor={<MaterialIcon icon=\"view_list\" size={27} />} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default injectSheet(styles)(ContextActions);\r\n","const styles = {\r\n    applicationBar: {\r\n        display: 'flex',\r\n        flexWrap: 'no-wrap',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        height: '45px',\r\n        background: '#D8D8D8'\r\n    },\r\n    title: {\r\n        fontSize: '18px'\r\n    }\r\n};\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport injectSheet from 'react-jss';\r\nimport WindowActions from './WindowActions/WindowActions';\r\nimport ContextActions from './ContextActions/ContextActions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ApplicationBar.styles';\r\n\r\nconst ApplicationBar = ({classes, title, onSizeChange, onMinimize, onClose, desktopContext}) => (\r\n    <div className={classes.applicationBar} style={{background: desktopContext.state.theme.applicationBarBg}}>\r\n        <div className={classes.actions}>\r\n            <ContextActions />\r\n        </div>\r\n\r\n        <div className={classes.meta}>\r\n            <div className={classes.title}>\r\n                { title }\r\n            </div>\r\n        </div>\r\n\r\n        <div className={classes.window}>\r\n            <WindowActions\r\n                onSizeChange={onSizeChange}\r\n                onClose={onClose}\r\n                onMinimize={onMinimize}\r\n                desktopContext={desktopContext} />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nApplicationBar.propTypes = {\r\n    classes: PropTypes.object,\r\n    title: PropTypes.string,\r\n    onSizeChange: PropTypes.func.isRequired,\r\n    onMinimize: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default injectSheet(styles)(ApplicationBar);\r\n","const styles = {\r\n    application: {\r\n        position: 'absolute',\r\n        overflow: 'auto',\r\n        background: '#F2F2F2',\r\n        boxShadow: '0px 0px 6px 0px rgba(0,0,0,0.45)',\r\n        resize: 'both',\r\n        transition: 'width 350ms, height 350ms'\r\n    },\r\n    barArea: {\r\n        position: 'relative'\r\n    },\r\n    barMask: {\r\n        position: 'absolute',\r\n        top: '0',\r\n        left: '50%',\r\n        marginLeft: '-125px',\r\n        width: '250px',\r\n        height: '45px',\r\n        zIndex: '2',\r\n        cursor: 'move'\r\n    },\r\n    appArea: {\r\n        resize: 'both'\r\n    }\r\n};\r\n\r\nexport default styles;\r\n","import React, { Component } from 'react';\r\nimport injectSheet from 'react-jss';\r\nimport ApplicationBar from '../ApplicationBar/ApplicationBar';\r\nimport uuid from 'uuid/v1';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Application.styles';\r\n\r\nclass Application extends Component {\r\n\r\n    state = {\r\n        guid: `application-${uuid()}`,\r\n        width: 800,\r\n        height: 520,\r\n        x: 0,\r\n        y: 0,\r\n        clickTrack: 0,\r\n        dragXTrack: 0,\r\n        dragYTrack: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setInitialPosition();\r\n        this.setLayer();\r\n    }\r\n\r\n    /**\r\n     * Sets the starting position of the app window in the center of the app zone.\r\n     */\r\n    setInitialPosition = () => {\r\n        const zone = document.getElementById(this.props.zoneId);\r\n\r\n        if (!zone) {\r\n            console.error('zoneId must match an id of a app zone');\r\n            return;\r\n        }\r\n\r\n        const width = zone.offsetWidth;\r\n        const height = zone.offsetHeight;\r\n\r\n        this.setState({\r\n            x: (width / 2) - (this.state.width / 2),\r\n            y: (height / 2) - (this.state.height / 2)\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set position tracking state on app bar drag.\r\n     * @param { event } e\r\n     */\r\n    dragBar = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            dragXTrack: e.clientX,\r\n            dragYTrack: e.clientY\r\n        }, () => {\r\n            document.addEventListener('mouseup', this.removeAppDrag);\r\n            document.addEventListener('mousemove', this.dragAppWindow);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update the position of the app window on appbar drag.\r\n     * @param { event } e\r\n     */\r\n    dragAppWindow = (e) => {\r\n        e.preventDefault();\r\n        const appWindow = document.getElementById(this.state.guid);\r\n\r\n        this.setState({\r\n            dragXTrack: e.clientX,\r\n            dragYTrack: e.clientY,\r\n            x: (appWindow.offsetLeft - (this.state.dragXTrack - e.clientX)),\r\n            y: (appWindow.offsetTop - (this.state.dragYTrack - e.clientY))\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Clear appbar drag related drag handlers on the document.\r\n     * Happens after the window has finsished dragging rather than on unmount.\r\n     */\r\n    removeAppDrag = () => {\r\n        document.removeEventListener('mouseup', this.removeAppDrag);\r\n        document.removeEventListener('mousemove', this.dragAppWindow);\r\n    };\r\n\r\n    /**\r\n     * Handle actions when clicking the center of the app bar. Actions...\r\n     * 1. Handle double click action of the appbar to expand the app window.\r\n     */\r\n    onBarClick = () => {\r\n        this.setState({\r\n            clickTrack: this.state.clickTrack + 1\r\n        }, () => {\r\n            if (this.state.clickTrack === 2) {\r\n                this.setSize();\r\n            } else {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        clickTrack: 0\r\n                    });\r\n                }, 1200);\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set the width of the app window.\r\n     */\r\n    setSize = () => {\r\n        const desktop = document.getElementById(this.props.zoneId);\r\n\r\n        const dtWidth = desktop.offsetWidth;\r\n        const dtHeight = desktop.offsetHeight;\r\n        \r\n        let width = 800;\r\n        let height = 520;\r\n\r\n        if (this.state.width !== dtWidth && this.state.height !== dtHeight) {\r\n            width = dtWidth;\r\n            height = dtHeight;\r\n        }\r\n\r\n        this.setState({\r\n            width: width,\r\n            height: height\r\n        }, this.setInitialPosition);\r\n    };\r\n\r\n    /**\r\n     * Sets the \"layer\" of this application window. This means...\r\n     * 1. Setting the z-index of all open app windows to 1.\r\n     * 2. Setting the z-index of this app window to 2.\r\n     */\r\n    setLayer = () => {\r\n        const allBars = document.querySelectorAll('.desktop-ui-application');\r\n\r\n        if (allBars) {\r\n            allBars.forEach((bar) => {\r\n                bar.style.zIndex = 1;\r\n            });\r\n        }\r\n\r\n        const desktop = document.getElementById(this.state.guid);\r\n        desktop.style.zIndex = 2;\r\n    };\r\n\r\n    /**\r\n     * Toggle the minimized state in the desktop context.\r\n     * This state manages the minimized styling for this app window.\r\n     */\r\n    minimizeApplication = () => {\r\n        this.setInitialPosition();\r\n\r\n        this.props.desktopContext.toggleMinimizedApplication(this.props.appId, true);\r\n    };\r\n\r\n    /**\r\n     * Call into the desktop context to remove this application from the open list.\r\n     */\r\n    closeApplication = () => {\r\n        this.props.desktopContext.toggleApplication(this.props.appId, false);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            children,\r\n            title,\r\n            desktopContext,\r\n            appId\r\n        } = this.props;\r\n\r\n        const {\r\n            guid,\r\n            width,\r\n            height,\r\n            x,\r\n            y\r\n        } = this.state;\r\n\r\n        const minimized = desktopContext.state.applications[appId].minimized;\r\n\r\n        const styling = {\r\n            width: minimized ? ' 0px' : `${width}px`,\r\n            height: minimized ? '0px' : `${height}px`,\r\n            top: `${y}px`,\r\n            left: `${x}px`,\r\n            background: desktopContext.state.theme.windowBg\r\n        };\r\n\r\n        return (\r\n            <div id={guid} style={styling} className={classes.application + ' desktop-ui-application'} onClick={this.setLayer}>\r\n                <div id={`bar-${guid}`} className={classes.barArea} onMouseDown={this.dragBar}>\r\n                    <ApplicationBar\r\n                        title={title}\r\n                        onSizeChange={this.setSize}\r\n                        onClose={this.closeApplication}\r\n                        onMinimize={this.minimizeApplication}\r\n                        desktopContext={desktopContext} />\r\n                    <div className={classes.barMask} onClick={this.onBarClick}></div>\r\n                </div>\r\n                <div className={classes.appArea}>\r\n                    { children }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nApplication.propTypes = {\r\n    title: PropTypes.string,\r\n    zoneId: PropTypes.string.isRequired,\r\n    appId: PropTypes.string.isRequired,\r\n    desktopContext: PropTypes.any,\r\n    children: PropTypes.any\r\n};\r\n\r\nexport default injectSheet(styles)(Application);\r\n\r\n","const styles = {\r\n    appZone: {\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        width: '100%',\r\n        height: 'calc(100% - 65px)',\r\n        overflow: 'hidden'\r\n    }\r\n};\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport injectSheet from 'react-jss';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './AppZone.styles';\r\n\r\nconst AppZone = ({classes, id, children}) => (\r\n    <div id={id} className={classes.appZone}>\r\n        { children }\r\n    </div>\r\n);\r\n\r\nAppZone.propTypes = {\r\n    classes: PropTypes.object,\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.any\r\n};\r\n\r\nexport default injectSheet(styles)(AppZone);\r\n","const styles = {\r\n    systemIcon: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '45px',\r\n        height: '45px',\r\n        background: '#D8D8D8',\r\n        borderRadius: '100%',\r\n        fontSize: '35px',\r\n        color: '#5A5A5A',\r\n        cursor: 'pointer'\r\n    }\r\n};\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport injectSheet from 'react-jss';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './SystemIcon.styles';\r\n\r\nconst SystemIcon = ({classes, icon, title, onClick, color, background}) => (\r\n    <div\r\n        className={classes.systemIcon}\r\n        title={title}\r\n        onClick={onClick}\r\n        color={color}\r\n        style={{background: background}}>\r\n        { icon }\r\n    </div>\r\n);\r\n\r\nSystemIcon.propTypes = {\r\n    classes: PropTypes.object,\r\n    icon: PropTypes.any,\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    color: PropTypes.string,\r\n    background: PropTypes.string\r\n};\r\n\r\nexport default injectSheet(styles)(SystemIcon);\r\n","import React from 'react';\r\nimport SystemIcon from '../../SystemIcon/SystemIcon';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TaskbarAction = ({desktopContext, appId, application}) => {\r\n\r\n    const toggleApplication = () => {\r\n        const isOpen = desktopContext.state.openApplications[appId];\r\n        const isMinimized = desktopContext.state.applications[appId].minimized;\r\n\r\n        if (!isOpen) {\r\n            desktopContext.toggleApplication(appId, true);\r\n        } else if (isMinimized) {\r\n            desktopContext.toggleMinimizedApplication(appId, false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SystemIcon\r\n            icon={application.icon}\r\n            title={application.name}\r\n            onClick={toggleApplication}\r\n            color={desktopContext.state.theme.text}\r\n            background={desktopContext.state.theme.taskbarActionBg} />\r\n    )\r\n};\r\n\r\nTaskbarAction.propTypes = {\r\n    desktopContext: PropTypes.any.isRequired,\r\n    appId: PropTypes.string.isRequired,\r\n    application: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TaskbarAction;\r\n","const styles = {\r\n    taskbar: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        height: '65px',\r\n        background: '#C4C4C4'\r\n    },\r\n    task: {\r\n        display: 'flex',\r\n        justifyContent: ' center',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        width: '65px',\r\n        height: '65px',\r\n        '&:after, &:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            bottom: '0',\r\n            left: '50%',\r\n            transform: 'translateX(-50%)',\r\n            height: '4px',\r\n            width: '55px',\r\n            maxWidth: '0',\r\n            borderTopRightRadius: '4px',\r\n            borderTopLeftRadius: '4px',\r\n            transition: 'all 250ms'\r\n        },\r\n        '&:after': {\r\n            transition: 'all 450ms'\r\n        },\r\n        '&:hover::before, &.minimized::before': {\r\n            background: '#848484',\r\n            maxWidth: '55px'\r\n        },\r\n        '&.open::after': {\r\n            background: '#0F9AE8',\r\n            maxWidth: '55px'\r\n        },\r\n        '&.minimized::after': {\r\n            maxWidth: '0'\r\n        }\r\n    }\r\n};\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport injectSheet from 'react-jss';\r\nimport TaskbarAction from './TaskbarAction/TaskbarAction';\r\nimport styles from './Taskbar.styles';\r\n\r\nconst Taskbar = ({classes, desktopContext}) => {\r\n\r\n    const applications = desktopContext.state.applications;\r\n\r\n    return (\r\n        <div className={classes.taskbar} style={{background: desktopContext.state.theme.taskbarBg}}>\r\n            {Object.keys(applications).map((appId) => (\r\n                <div\r\n                    key={appId}\r\n                    className={\r\n                        classes.task \r\n                        + (desktopContext.state.openApplications[appId] ? ' open' : '')\r\n                        + (desktopContext.state.applications[appId].minimized ? ' minimized' : '')}>\r\n                    <TaskbarAction\r\n                        desktopContext={desktopContext}\r\n                        appId={appId}\r\n                        application={desktopContext.state.applications[appId]} />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default injectSheet(styles)(Taskbar);\r\n","import React, { Component } from 'react';\r\nimport injectSheet from 'react-jss';\r\n\r\nconst styles = {\r\n    welcome: {\r\n        padding: '20px',\r\n        textAlign: 'center',\r\n        '& h3, & ul': {\r\n            textAlign: 'left'\r\n        }\r\n    }\r\n};\r\n\r\nclass ExampleWelcomeApp extends Component {\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.welcome}>\r\n                <h2>React Desktop UI Experiment.</h2>\r\n                <p>\r\n                    Experimenting with a desktop style ui using react. Currentl supports multiple applications which are essentially child\r\n                    components wrapped in an application component. The allows for a flexible implementation (would play nicely with MUI),\r\n                    applications could be treated as separate projects or plugins. A DesktopContext is provided to manage open applications and desktop state. \r\n                    Could be useful as an intranet ui, or as an interface for controlling a remote desktop.\r\n                </p>\r\n                <hr />\r\n                <h3>Todo</h3>\r\n                <ul>\r\n                    <li>Finish the context menu component</li>\r\n                    <li>Documentation for components</li>\r\n                    <li>Responsive UI</li>\r\n                    <li>Starter applications in a separate repo. (Ex: settings, file manager, etc...)</li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default injectSheet(styles)(ExampleWelcomeApp);\r\n","import React, { useEffect } from 'react';\r\nimport MaterialIcon from 'material-icons-react';\r\nimport Desktop from './DesktopUI/Desktop/Desktop';\r\nimport Application from './DesktopUI/Application/Application';\r\nimport AppZone from './DesktopUI/AppZone/AppZone';\r\nimport Taskbar from './DesktopUI/Taskbar/Taskbar';\r\nimport ExampleAppWelcome from './ExampleAppWelcome/ExampleAppWelcome';\r\nimport InfoIcon from 'mdi-react/InfoCircleIcon';\r\n\r\nconst Example = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.desktopContext.registerApplications([\r\n            {\r\n                id: 'welcome-app',\r\n                icon: <InfoIcon style={{fill: props.desktopContext.state.theme.text}} />,\r\n                name: 'Welcome'\r\n            },\r\n            {\r\n                id: 'components-app',\r\n                icon: <MaterialIcon icon=\"widgets\" color={props.desktopContext.state.theme.text} />,\r\n                name: 'components'\r\n            }\r\n        ]);\r\n    }, []);\r\n\r\n    return (\r\n        <Desktop id=\"desktop\" desktopContext={props.desktopContext}>\r\n            <AppZone id=\"apps\">\r\n                {Boolean(props.desktopContext.state.openApplications['welcome-app']) && (\r\n                    <Application\r\n                        title=\"Welcome\"\r\n                        zoneId=\"apps\"\r\n                        appId=\"welcome-app\"\r\n                        desktopContext={props.desktopContext}>\r\n                        <ExampleAppWelcome ctx={props.desktopContext} />\r\n                    </Application>\r\n                )}\r\n\r\n                {Boolean(props.desktopContext.state.openApplications['components-app']) && (\r\n                    <Application\r\n                        title=\"Components\"\r\n                        zoneId=\"apps\"\r\n                        appId=\"components-app\"\r\n                        desktopContext={props.desktopContext}>\r\n                        Components\r\n                    </Application>\r\n                )}\r\n            </AppZone>\r\n    \r\n            <Taskbar desktopContext={props.desktopContext} />\r\n        </Desktop>\r\n    );\r\n};\r\n\r\nexport default Example;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { DesktopConsumer, DesktopProvider } from './DesktopUI/DesktopContext';\r\nimport Example from './Example';\r\nimport { DesktopTheme } from './DesktopUI/DesktopTheme';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <DesktopProvider theme={DesktopTheme}>\r\n          <DesktopConsumer>\r\n            {context => (\r\n              <Example desktopContext={context} />\r\n            )}\r\n          </DesktopConsumer>\r\n        </DesktopProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}